html
  head
    title Patient Home
  body

    style
      include style.css

    h1#mainTitle PatientChat
    h2#subTitle Hospital Chat and Messaging System

    script(src="/socket.io/socket.io.js")
    
    script.
        sub();
        function sub()
        {
          if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
              navigator.serviceWorker.register('service-worker.js')
              .then(registration => {
                console.log('Service Worker is registered', registration);
              })
              .catch(err => {
                console.error('Registration failed:', err);
              });
            });
          }
        }
        Notification.requestPermission(status => {
          console.log('Notification permission status:', status);
        });

        var addMessage = function(text,sender){
        //  window.alert("add message");
          var messageBox = document.createElement("DIV");
          var id = sender + "Message";
          messageBox.setAttribute("id",id);
          var node = document.createElement("P");   
          var textnode = document.createTextNode(text);   
          node.appendChild(textnode);    
          messageBox.appendChild(node);                       
          document.getElementById("chatBox").appendChild(messageBox); 
        };

        var doctorData = !{JSON.stringify(doctorData)}
        var id = !{JSON.stringify(id)}
        
        var userName = doctorData.userName;
        var queryString = 'userType=doctor&userName='+userName +"&userId=" + id;
        socket = io.connect('', {query: queryString });
        socket.on("message",function(text){
            addMessage(text,"received");
            socket.emit("saveMessage",{"text" : text, "type" : "received"});            
        });

        socket.on("partnerAvailable",function(data){
          socket.emit("addPartner",data);
        });


        socket.on("patientEmergency",function(data){
          if (Notification.permission == 'granted') {
            navigator.serviceWorker.getRegistration().then(reg => {
              const options = {
                body: 'First notification!',
                icon: 'images/notification-flat.png',
                vibrate: [100, 50, 100],
                data: {
                  dateOfArrival: Date.now(),
                  primaryKey: 1
                }
              };
              reg.showNotification('Patient ' + data.patientName + ' is having an emergency');
            });
          }
        });

        let sendMessage = function(){
          
          var text = document.getElementById("messageText").value;
          if(text!="")
          {
            addMessage(text,"sent");
            socket.emit("sendMessage",{ 'text' : text});
             document.getElementById("messageText").value = "";
              socket.emit("saveMessage",{"text" : text, "type" : "sent"});
          }
        };

        let disconnect = function(){
          socket.emit("logout"); 
          return true;
        }

    #mainBox
        if doctorData
          p #{doctorData.userName}

        #chatBox



        #messageWindow
         input(type="text" placeholder="Type...")#messageText
         button(onclick='return sendMessage()')#sendMessage Send    
    form(action="/logout" onsubmit='disconnect()' method='GET')
      input(type="submit" value='LOGOUT')
